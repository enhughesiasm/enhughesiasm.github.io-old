{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/contact/submit_contact_form.js","components/contact/contact_form.js","components/contact/recaptcha.js","components/contact/contact_form_gate.js","components/contact/contact.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","submitContactForm","inputs","a","url","clientConfig","nodeProtocol","nodeServer","nodePort","response","success","message","fetch","method","mode","cache","headers","Accept","body","JSON_to_URLEncoded","status","testRoundTrip","ContactForm","recaptchaToken","onSubmit","onTest","callback","responseCallback","useState","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","name","useForm","validName","isValidName","validEmail","email","test","isValidEmail","validMessage","isValidMessage","enabled","id","className","style","marginTop","htmlFor","width","placeholder","onChange","required","icon","position","rows","height","bottom","type","disabled","href","rel","ReCaptcha","props","scriptUrl","ready","setReady","onChangeClientState","newState","addedTags","scriptTags","foundScript","find","src","addEventListener","verifyCallback","action","window","grecaptcha","execute","recaptchaSiteKey","then","token","once","defer","elementID","data-verifycallbackname","verifyCallbackName","defaultProps","ContactFormGate","state","submitted","submittedText","submissionSuccess","responseMessage","setState","ok","json","this","React","Component","Contact","page"],"mappings":"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","file":"static/js/15.0a711a2f.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { JSON_to_URLEncoded } from '../shared/functions';\nimport clientConfig from '../../config/client_config';\n\nexport async function submitContactForm(inputs) {\n\tconst url =\n\t\tclientConfig.nodeProtocol +\n\t\t'://' +\n\t\tclientConfig.nodeServer +\n\t\t':' +\n\t\tclientConfig.nodePort +\n\t\t'/api/submit-contact-form';\n\n\tlet response = { success: false, message: 'Attempting to reach server.' };\n\n\ttry {\n\t\tresponse = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/x-www-form-urlencoded',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody: JSON_to_URLEncoded(inputs), // this has to be url_encoded rather than pure JSON because CORS stops us sending json \"cross-domain\", ie to a different port\n\t\t\t// fuck web development, man, everything is a pain in the arse\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\treturn { success: false, message: 'Could not reach server.' };\n\t\t} else {\n\t\t\treturn response;\n\t\t}\n\t} catch (err) {\n\t\treturn { success: false, message: 'Could not reach server.' };\n\t}\n\n\t//return response;\n}\n\nexport async function testRoundTrip() {\n\tconst url =\n\t\tclientConfig.nodeProtocol +\n\t\t'//' +\n\t\tclientConfig.nodeServer +\n\t\t':' +\n\t\tclientConfig.nodePort +\n\t\t'/api/test-round-trip';\n\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tmode: 'cors',\n\t\tcache: 'no-cache',\n\t\theaders: {\n\t\t\tAccept: 'application/x-www-form-urlencoded',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tbody: { message: 'hello server' },\n\t});\n\n\treturn response;\n}\n","import React, {useState} from 'react';\nimport FontAwesome from '../shared/font_awesome';\nimport { testRoundTrip } from './submit_contact_form';\nimport SuccessIcon from '../shared/success_icon';\n\nconst useForm = (callback, responseCallback) => {\n\tconst [inputs, setInputs] = useState({});\n\tconst handleSubmit = (event) => {\n\t\tif (event) event.preventDefault();\n\t\tcallback(inputs);\n\t};\n\tconst handleInputChange = (event) => {\n\n\t\tevent.persist();\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n\t};\n\treturn {\n\t\thandleSubmit,\n\t\thandleInputChange,\n\t\tinputs\n\t};\n};\n\nconst isValidName = (inputs) => {\n\treturn inputs.name && inputs.name.length >= 3;\n};\n\nconst isValidEmail = (inputs) => {\n\treturn inputs.email && (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(inputs.email));\n};\n\nconst isValidMessage = (inputs) => {\n\treturn inputs.message && inputs.message.length >= 20 && inputs.message.length < 2000;\n};\n\nconst ContactForm = ({ recaptchaToken, onSubmit, onTest}) => {\n\n\tconst {inputs, handleInputChange, handleSubmit} = useForm(onSubmit);\n\n\tinputs.recaptchaToken = recaptchaToken;\n\tconst validName = isValidName(inputs);\n\tconst validEmail = isValidEmail(inputs);\n\tconst validMessage = isValidMessage(inputs);\n\n\tconst enabled = (!!recaptchaToken) && validName && validEmail && validMessage;\n\treturn ( <form id=\"contactForm\" onSubmit={handleSubmit} className=\"box\" style={{marginTop:'3rem'}}>\n\t\t<div className=\"field is-horizontal\">\n\t\t\t<div className=\"field-label\">\n\t\t\t\t<label className=\"label\" htmlFor=\"fromName\">Name</label>\n\t\t\t</div>\n\t\t\t<div className=\"field-body\">\n\t\t\t\t<div className=\"control has-icons-left has-icons-right\" style={{width:'100%'}}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={(validName ? 'is-success': 'is-warning') + ' input is-rounded'}\n\t\t\t\t\t\tid=\"fromName\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\tvalue={inputs.name || ''}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t<FontAwesome icon='user'/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<SuccessIcon success={validName || false} position='is-right' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"field is-horizontal\">\n\t\t\t<div className=\"field-label\">\n\t\t\t\t<label className=\"label\" htmlFor=\"fromEmail\">Email</label>\n\t\t\t</div>\n\t\t\t<div className=\"field-body\">\n\t\t\t\t<div className=\"control has-icons-left has-icons-right\"  style={{width:'100%'}}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={(validEmail ? 'is-success': 'is-warning') + ' input is-rounded'}\n\t\t\t\t\t\tid=\"fromEmail\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t\tvalue={inputs.email || ''}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t<FontAwesome icon='envelope'/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<SuccessIcon success={validEmail || false} position='is-right' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"field is-horizontal\">\n\t\t\t<div className=\"field-label\">\n\t\t\t\t<label className=\"label\" htmlFor=\"fromMessage\">Message</label>\n\t\t\t</div>\n\t\t\t<div className=\"field-body\">\n\t\t\t\t<div className=\"control has-icons-right\" style={{width:'100%'}}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\trows='6'\n\t\t\t\t\t\tclassName={(validMessage ? 'is-success': 'is-warning') + ' textarea'}\n\t\t\t\t\t\tid=\"fromMessage\"\n\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\tplaceholder=\"Enter your message\"\n\t\t\t\t\t\tvalue={inputs.message || ''}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tstyle={{height:'auto'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <span className=\"icon is-small is-left\">\n\t\t\t\t\t\t<FontAwesome icon='pencil-alt'/>\n\t\t\t\t\t</span> */}\n\t\t\t\t\t<SuccessIcon success={validMessage || false} position='is-right' bottom/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"field is-horizontal\">\n\t\t\t<div className=\"field-label\">{/* left blank for spacing*/}</div>\n\t\t\t<div className=\"field-body\">\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<button type='submit' className={'button is-rounded ' + (recaptchaToken ? (enabled ? 'is-success' : 'is-warning') : 'is-loading')} disabled={!enabled}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<p className=\"is-size-7\">\n\t\t\t\tThis site is protected by reCAPTCHA and the Google <a href=\"https://policies.google.com/privacy\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a> and <a href=\"https://policies.google.com/terms\" target=\"_blank\" rel=\"noopener noreferrer\">Terms of Service</a> apply.\n\t\t</p>\n\t</form>\n\n\n\t);\n};\n\nexport default ContactForm;","import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clientConfig from '../../config/client_config';\nimport Helmet from 'react-helmet';\n\nconst propTypes = {\n\telementID: PropTypes.string,\n\tverifyCallbackName: PropTypes.string,\n\tverifyCallback: PropTypes.func,\n\taction: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n\telementID: 'g-recaptcha',\n\tverifyCallbackName: 'verifyCallback',\n};\n\nconst isReady = () =>\n\ttypeof window !== 'undefined' &&\n\ttypeof window.grecaptcha !== 'undefined' &&\n\ttypeof window.grecaptcha.execute !== 'undefined';\n\nconst ReCaptcha = (props) => {\n\tconst scriptUrl = 'https://www.google.com/recaptcha/api.js';\n\n\tconst [ready, setReady] = useState(false);\n\n\tconst handleChangeClientState = (newState, addedTags) => {\n\t\tif (addedTags && addedTags.scriptTags) {\n\t\t\tconst foundScript = addedTags.scriptTags.find(\n\t\t\t\t({ src }) => src === scriptUrl\n\t\t\t);\n\t\t\tif (foundScript) {\n\t\t\t\tfoundScript.addEventListener(\n\t\t\t\t\t'load',\n\t\t\t\t\t() => {\n\t\t\t\t\t\tsetReady(true);\n\t\t\t\t\t\tconst { verifyCallback, action } = props;\n\n\t\t\t\t\t\twindow.grecaptcha.ready(function () {\n\t\t\t\t\t\t\twindow.grecaptcha\n\t\t\t\t\t\t\t\t.execute(clientConfig.recaptchaSiteKey, {\n\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((token) => {\n\t\t\t\t\t\t\t\t\tif (typeof verifyCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\tverifyCallback(token);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonce: true,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet onChangeClientState={handleChangeClientState}>\n\t\t\t\t<script defer src={scriptUrl} />\n\t\t\t</Helmet>\n\t\t\t{ready ? (\n\t\t\t\t<div\n\t\t\t\t\tid={props.elementID}\n\t\t\t\t\tdata-verifycallbackname={props.verifyCallbackName}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div id={props.elementID} className='g-recaptcha' />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nReCaptcha.propTypes = propTypes;\nReCaptcha.defaultProps = defaultProps;\n\nexport default ReCaptcha;\n","import React from 'react';\n\nimport ContactForm from './contact_form';\nimport { submitContactForm, testRoundTrip } from './submit_contact_form';\nimport LoadingBounce from '../shared/loading_bounce';\nimport ReCaptcha from './recaptcha';\n\nclass ContactFormGate extends React.Component {\n\tstate = {\n\t\trecaptchaToken: null,\n\t\tsubmitted: false,\n\t\tsubmittedText: null,\n\t\tsubmissionSuccess: false,\n\t\tresponseMessage: null,\n\t};\n\tverifyCallback = (recaptchaToken) => {\n\t\tthis.setState({ recaptchaToken: recaptchaToken });\n\t};\n\n\tonTest = async () => {\n\t\tthis.setState({ submitted: true });\n\t\tconst response = await testRoundTrip();\n\n\t\tif (response.ok) {\n\t\t\tconst body = await response.json();\n\t\t\tthis.setState({\n\t\t\t\tsubmissionSuccess: body.success,\n\t\t\t\tresponseMessage: body.message,\n\t\t\t});\n\t\t}\n\t};\n\n\tonSubmit = async (inputs) => {\n\t\tthis.setState({ submitted: true, submittedText: inputs.message });\n\n\t\tconst response = await submitContactForm(inputs);\n\n\t\tif (response.ok) {\n\t\t\tconst body = await response.json();\n\n\t\t\tthis.setState({\n\t\t\t\tsubmissionSuccess: body.success,\n\t\t\t\tresponseMessage: body.message,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsubmissionSuccess: false,\n\t\t\t\tresponseMessage:\n\t\t\t\t\tresponse.message || 'Something happened. Sorry!',\n\t\t\t});\n\t\t}\n\t};\n\trender() {\n\t\tconst {\n\t\t\tsubmitted,\n\t\t\tresponseMessage,\n\t\t\tsubmissionSuccess,\n\t\t\tsubmittedText,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ReCaptcha\n\t\t\t\t\taction='contact_form'\n\t\t\t\t\tverifyCallback={this.verifyCallback}\n\t\t\t\t/>\n\t\t\t\t{!submitted && (\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\trecaptchaToken={this.state.recaptchaToken}\n\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\tonTest={this.onTest}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{submitted && !responseMessage && <LoadingBounce />}\n\t\t\t\t{submitted && responseMessage && (\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'notification is-' +\n\t\t\t\t\t\t\t(submissionSuccess ? 'success' : 'danger')\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t{submissionSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tSUCCESS! Your message has been sent. Thank\n\t\t\t\t\t\t\t\t\tyou!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{submittedText && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Your message:</strong>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>{submittedText}</p>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!submissionSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>ERROR: {responseMessage}</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tYour message has NOT been sent. Sorry!\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tIf this problem persists, please email\n\t\t\t\t\t\t\t\t\tdirectly via <br />\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\tneil at walkingoncustard dot com\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{submittedText && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Your message:</strong>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>{submittedText}</p>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ContactFormGate;\n","import React from 'react';\nimport HelmetContainer from '../shared/helmet_container';\nimport ContactFormGate from './contact_form_gate';\nimport clientConfig from '../../config/client_config';\n\nfunction Contact() {\n\treturn (\n\t\t<div className='has-text-centered has-spacing-top-3'>\n\t\t\t<HelmetContainer page='contact' />\n\n\t\t\t<h1 className='title'>contact</h1>\n\t\t\t<div className='content'>\n\t\t\t\t<div className='notification is-light'>\n\t\t\t\t\t<p>Email is welcome!</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Use the form below</strong>, or email directly:\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\tneil <strong>at</strong> walkingoncustard{' '}\n\t\t\t\t\t\t\t<strong>dot</strong> com\n\t\t\t\t\t\t</em>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='notification is-primary'>\n\t\t\t\t\t\tI read every email and reply to as many as I can.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ContactFormGate />\n\t\t\t\t<p className='is-size-6 notification is-light is-hidden-mobile'>\n\t\t\t\t\tOr use your preferred social media site via the links below.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Contact;\n"],"sourceRoot":""}