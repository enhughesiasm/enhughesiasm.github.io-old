{"version":3,"sources":["components/contact/contact_form.js","components/contact/submit_contact_form.js","components/contact/recaptcha.js","components/contact/contact_form_gate.js","components/contact/contact.js"],"names":["ContactForm","recaptchaToken","onSubmit","onTest","callback","responseCallback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","useForm","validName","length","isValidName","validEmail","email","test","isValidEmail","validMessage","message","isValidMessage","enabled","id","className","style","marginTop","htmlFor","width","placeholder","onChange","required","icon","success","position","rows","height","bottom","justifyContent","type","disabled","href","rel","submitContactForm","a","url","clientConfig","nodeProtocol","nodeServer","nodePort","response","fetch","method","mode","cache","headers","Accept","body","JSON_to_URLEncoded","status","testRoundTrip","ReCaptcha","props","scriptUrl","recaptchaSiteKey","ready","setReady","onChangeClientState","newState","addedTags","scriptTags","foundScript","find","src","addEventListener","verifyCallback","action","window","grecaptcha","execute","then","token","once","async","defer","elementID","data-verifycallbackname","verifyCallbackName","defaultProps","ContactFormGate","state","submitted","submittedText","submissionSuccess","responseMessage","setState","ok","json","console","log","this","React","Component","Contact","page"],"mappings":"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","file":"static/js/15.dea0b9fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport FontAwesome from '../shared/font_awesome';\n// import { testRoundTrip } from './submit_contact_form';\nimport SuccessIcon from '../shared/success_icon';\n\nconst useForm = (callback, responseCallback) => {\n\tconst [inputs, setInputs] = useState({});\n\tconst handleSubmit = (event) => {\n\t\tif (event) event.preventDefault();\n\t\tcallback(inputs);\n\t};\n\tconst handleInputChange = (event) => {\n\t\tevent.persist();\n\t\tsetInputs((inputs) => ({\n\t\t\t...inputs,\n\t\t\t[event.target.name]: event.target.value,\n\t\t}));\n\t};\n\treturn {\n\t\thandleSubmit,\n\t\thandleInputChange,\n\t\tinputs,\n\t};\n};\n\nconst isValidName = (inputs) => {\n\treturn inputs.name && inputs.name.length >= 3;\n};\n\nconst isValidEmail = (inputs) => {\n\treturn (\n\t\tinputs.email &&\n\t\t/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(inputs.email)\n\t);\n};\n\nconst isValidMessage = (inputs) => {\n\treturn (\n\t\tinputs.message &&\n\t\tinputs.message.length >= 20 &&\n\t\tinputs.message.length < 2000\n\t);\n};\n\nconst ContactForm = ({ recaptchaToken, onSubmit, onTest }) => {\n\tconst { inputs, handleInputChange, handleSubmit } = useForm(onSubmit);\n\n\tinputs.recaptchaToken = recaptchaToken;\n\tconst validName = isValidName(inputs);\n\tconst validEmail = isValidEmail(inputs);\n\tconst validMessage = isValidMessage(inputs);\n\n\tconst enabled = !!recaptchaToken && validName && validEmail && validMessage;\n\treturn (\n\t\t<form\n\t\t\tid='contactForm'\n\t\t\tonSubmit={handleSubmit}\n\t\t\tclassName='box'\n\t\t\tstyle={{ marginTop: '3rem' }}>\n\t\t\t<div className='field is-horizontal'>\n\t\t\t\t<div className='field-label'>\n\t\t\t\t\t<label className='label' htmlFor='fromName'>\n\t\t\t\t\t\tName\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='field-body'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='control has-icons-left has-icons-right'\n\t\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t(validName ? 'is-success' : 'is-warning') +\n\t\t\t\t\t\t\t\t' input is-rounded'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid='fromName'\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\t\t\tvalue={inputs.name || ''}\n\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t<FontAwesome icon='user' />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\tsuccess={validName || false}\n\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='field is-horizontal'>\n\t\t\t\t<div className='field-label'>\n\t\t\t\t\t<label className='label' htmlFor='fromEmail'>\n\t\t\t\t\t\tEmail\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='field-body'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='control has-icons-left has-icons-right'\n\t\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t(validEmail ? 'is-success' : 'is-warning') +\n\t\t\t\t\t\t\t\t' input is-rounded'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid='fromEmail'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tplaceholder='Enter your email'\n\t\t\t\t\t\t\tvalue={inputs.email || ''}\n\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t<FontAwesome icon='envelope' />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\tsuccess={validEmail || false}\n\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='field is-horizontal'>\n\t\t\t\t<div className='field-label'>\n\t\t\t\t\t<label className='label' htmlFor='fromMessage'>\n\t\t\t\t\t\tMessage\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='field-body'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='control has-icons-right'\n\t\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\trows='6'\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t(validMessage ? 'is-success' : 'is-warning') +\n\t\t\t\t\t\t\t\t' textarea'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid='fromMessage'\n\t\t\t\t\t\t\tname='message'\n\t\t\t\t\t\t\tplaceholder='Enter your message'\n\t\t\t\t\t\t\tvalue={inputs.message || ''}\n\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tstyle={{ height: 'auto' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <span className=\"icon is-small is-left\">\n\t\t\t\t\t\t<FontAwesome icon='pencil-alt'/>\n\t\t\t\t\t</span> */}\n\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\tsuccess={validMessage || false}\n\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t\tbottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='field is-horizontal'>\n\t\t\t\t<div className='field-label'>{/* left blank for spacing*/}</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='field-body'\n\t\t\t\t\tstyle={{ justifyContent: 'center' }}>\n\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t'button is-rounded ' +\n\t\t\t\t\t\t\t\t(recaptchaToken\n\t\t\t\t\t\t\t\t\t? enabled\n\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t: 'is-warning'\n\t\t\t\t\t\t\t\t\t: 'is-loading')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={!enabled}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<p className='is-size-7'>\n\t\t\t\tThis site is protected by reCAPTCHA and the Google{' '}\n\t\t\t\t<a\n\t\t\t\t\thref='https://policies.google.com/privacy'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\tPrivacy Policy\n\t\t\t\t</a>{' '}\n\t\t\t\tand{' '}\n\t\t\t\t<a\n\t\t\t\t\thref='https://policies.google.com/terms'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\tTerms of Service\n\t\t\t\t</a>{' '}\n\t\t\t\tapply.\n\t\t\t</p>\n\t\t</form>\n\t);\n};\n\nexport default ContactForm;\n","import { JSON_to_URLEncoded } from '../shared/functions';\nimport clientConfig from '../../config/client_config';\n\nexport async function submitContactForm(inputs) {\n\tconst url =\n\t\tclientConfig.nodeProtocol +\n\t\t'://' +\n\t\tclientConfig.nodeServer +\n\t\t':' +\n\t\tclientConfig.nodePort +\n\t\t'/api/submit-contact-form';\n\n\tlet response = { success: false, message: 'Attempting to reach server.' };\n\n\ttry {\n\t\tresponse = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/x-www-form-urlencoded',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody: JSON_to_URLEncoded(inputs), // this has to be url_encoded rather than pure JSON because CORS stops us sending json \"cross-domain\", ie to a different port\n\t\t\t// fuck web development, man, everything is a pain in the arse\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\treturn { success: false, message: 'Could not reach server.' };\n\t\t} else {\n\t\t\treturn response;\n\t\t}\n\t} catch (err) {\n\t\treturn { success: false, message: 'Could not reach server.' };\n\t}\n\n\t//return response;\n}\n\nexport async function testRoundTrip() {\n\tconst url =\n\t\tclientConfig.nodeProtocol +\n\t\t'//' +\n\t\tclientConfig.nodeServer +\n\t\t':' +\n\t\tclientConfig.nodePort +\n\t\t'/api/test-round-trip';\n\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tmode: 'cors',\n\t\tcache: 'no-cache',\n\t\theaders: {\n\t\t\tAccept: 'application/x-www-form-urlencoded',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tbody: { message: 'hello server' },\n\t});\n\n\treturn response;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clientConfig from '../../config/client_config';\nimport Helmet from 'react-helmet';\n\nconst propTypes = {\n\telementID: PropTypes.string,\n\tverifyCallbackName: PropTypes.string,\n\tverifyCallback: PropTypes.func,\n\taction: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n\telementID: 'g-recaptcha',\n\tverifyCallbackName: 'verifyCallback',\n};\n\n// const isReady = () =>\n// \ttypeof window !== 'undefined' &&\n// \ttypeof window.grecaptcha !== 'undefined' &&\n// \ttypeof window.grecaptcha.execute !== 'undefined';\n\nconst ReCaptcha = (props) => {\n\tconst scriptUrl =\n\t\t'https://www.google.com/recaptcha/api.js?render=' +\n\t\tclientConfig.recaptchaSiteKey;\n\n\tconst [ready, setReady] = useState(false);\n\n\tconst handleChangeClientState = (newState, addedTags) => {\n\t\tif (addedTags && addedTags.scriptTags) {\n\t\t\tconst foundScript = addedTags.scriptTags.find(\n\t\t\t\t({ src }) => src === scriptUrl\n\t\t\t);\n\t\t\tif (foundScript) {\n\t\t\t\tfoundScript.addEventListener(\n\t\t\t\t\t'load',\n\t\t\t\t\t() => {\n\t\t\t\t\t\tsetReady(true);\n\t\t\t\t\t\tconst { verifyCallback, action } = props;\n\n\t\t\t\t\t\twindow.grecaptcha.ready(function () {\n\t\t\t\t\t\t\twindow.grecaptcha\n\t\t\t\t\t\t\t\t.execute(clientConfig.recaptchaSiteKey, {\n\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((token) => {\n\t\t\t\t\t\t\t\t\tif (typeof verifyCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\tverifyCallback(token);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonce: true,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet onChangeClientState={handleChangeClientState}>\n\t\t\t\t<script async defer src={scriptUrl} />\n\t\t\t</Helmet>\n\t\t\t{ready ? (\n\t\t\t\t<div\n\t\t\t\t\tid={props.elementID}\n\t\t\t\t\tdata-verifycallbackname={props.verifyCallbackName}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div id={props.elementID} className='g-recaptcha' />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nReCaptcha.propTypes = propTypes;\nReCaptcha.defaultProps = defaultProps;\n\nexport default ReCaptcha;\n","import React from 'react';\nimport ContactForm from './contact_form';\nimport { submitContactForm, testRoundTrip } from './submit_contact_form';\nimport LoadingBounce from '../shared/loading_bounce';\nimport ReCaptcha from './recaptcha';\nimport clientConfig from '../../config/client_config';\n\nclass ContactFormGate extends React.Component {\n\tstate = {\n\t\trecaptchaToken: null,\n\t\tsubmitted: false,\n\t\tsubmittedText: null,\n\t\tsubmissionSuccess: false,\n\t\tresponseMessage: null,\n\t};\n\tverifyCallback = (recaptchaToken) => {\n\t\tthis.setState({ recaptchaToken: recaptchaToken });\n\t};\n\n\tonTest = async () => {\n\t\tthis.setState({ submitted: true });\n\t\tconst response = await testRoundTrip();\n\n\t\tif (response.ok) {\n\t\t\tconst body = await response.json();\n\t\t\tthis.setState({\n\t\t\t\tsubmissionSuccess: body.success,\n\t\t\t\tresponseMessage: body.message,\n\t\t\t});\n\t\t}\n\t};\n\n\tonSubmit = async (inputs) => {\n\t\tthis.setState({ submitted: true, submittedText: inputs.message });\n\n\t\t// refresh the recaptcha token as they expire after 2 minutes\n\t\tconst token = await window.grecaptcha.execute(\n\t\t\tclientConfig.recaptchaSiteKey,\n\t\t\t{\n\t\t\t\taction: 'submit_contact_form',\n\t\t\t}\n\t\t);\n\n\t\tif (token) {\n\t\t\tinputs.recaptchaToken = token;\n\t\t\tconst response = await submitContactForm(inputs);\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst body = await response.json();\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tsubmissionSuccess: body.success,\n\t\t\t\t\tresponseMessage: body.message,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsubmissionSuccess: false,\n\t\t\t\t\tresponseMessage:\n\t\t\t\t\t\tresponse.message || 'Something happened. Sorry!',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Could not refresh recaptcha token');\n\t\t\tthis.setState({\n\t\t\t\tsubmissionSuccess: false,\n\t\t\t\tresponseMessage: 'Sorry. Recaptcha could not be checked.',\n\t\t\t});\n\t\t}\n\t};\n\trender() {\n\t\tconst {\n\t\t\tsubmitted,\n\t\t\tresponseMessage,\n\t\t\tsubmissionSuccess,\n\t\t\tsubmittedText,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ReCaptcha\n\t\t\t\t\taction='load_contact_form'\n\t\t\t\t\tverifyCallback={this.verifyCallback}\n\t\t\t\t/>\n\t\t\t\t{!submitted && (\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\trecaptchaToken={this.state.recaptchaToken}\n\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\tonTest={this.onTest}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{submitted && !responseMessage && <LoadingBounce />}\n\t\t\t\t{submitted && responseMessage && (\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'notification is-' +\n\t\t\t\t\t\t\t(submissionSuccess ? 'success' : 'danger')\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t{submissionSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tSUCCESS! Your message has been sent. Thank\n\t\t\t\t\t\t\t\t\tyou!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{submittedText && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Your message:</strong>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>{submittedText}</p>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!submissionSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>ERROR: {responseMessage}</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tYour message has NOT been sent. Sorry!\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tIf this problem persists, please email\n\t\t\t\t\t\t\t\t\tdirectly via <br />\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\tneil at walkingoncustard dot com\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{submittedText && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Your message:</strong>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>{submittedText}</p>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ContactFormGate;\n","import React from 'react';\nimport HelmetContainer from '../shared/helmet_container';\nimport ContactFormGate from './contact_form_gate';\n\nfunction Contact() {\n\treturn (\n\t\t<div className='has-text-centered'>\n\t\t\t<HelmetContainer page='contact' />\n\n\t\t\t<h1 className='title'>contact</h1>\n\t\t\t<div className='content'>\n\t\t\t\t<div className='notification is-light'>\n\t\t\t\t\t<p>Email is welcome!</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Use the form below</strong>, or email directly:\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\tneil <strong>at</strong> walkingoncustard{' '}\n\t\t\t\t\t\t\t<strong>dot</strong> com\n\t\t\t\t\t\t</em>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='notification is-primary'>\n\t\t\t\t\t\tI read every email and reply to as many as I can.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ContactFormGate />\n\t\t\t\t<p className='is-size-6 notification is-light is-hidden-mobile'>\n\t\t\t\t\tOr use your preferred social media site via the links below.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Contact;\n"],"sourceRoot":""}